variables: my_secrets.yml

schedules:
        #  - tasks: ['populate-*', 'clean-*', 'update-*']
        #    schedule:
        #      hour: "*/3"
        #  - tasks: ['fill-*', '*-rss']
        #    schedule:
        #      hour: "*/3"
        #  - tasks: ['*-discover', '*-manual']
        #    schedule:
        #      hour: "*/3"
        #  - tasks: ['move-*', '*-subtitles']
        #    schedule:
        #      hour: "*/3"
  - tasks: ['*']
    schedule:
      hour: "*/4"
#      minute: "*/15"



web_server:
  bind: 0.0.0.0
  port: 5050
  web_ui: yes

templates:

##### Series config
#
  series:
    metainfo_series: yes
    thetvdb_lookup: yes
#    tvmaze_lookup: yes
    include: series.yml
    configure_series:
      from:
        entry_list: trakt-series
      settings:
        identified_by: ep
        timeframe: 16 hours
        #target: hdtv+ 720p
        #quality: webrip 720p
#        quality: webrip+
        propers: 16 hours
        specials: no
        season_packs: always
    content_size:
      min: 150
    content_filter:
      require:
        - '*.mkv'

##### Movies config
#
  movies-1080p:
    metainfo_movie: yes
#    tmdb_lookup: yes
    trakt_lookup:
      account: "{? trakt.accout ?}"
      username: "{? trakt.user ?}"
    movie_list: trakt-movies
    quality: 1080p webdl
    content_size:
      min: 800
      max: 9000

  movies-720p:
    metainfo_movie: yes
#    tmdb_lookup: yes
    trakt_lookup:
      account: "{? trakt.accout ?}"
      username: "{? trakt.user ?}"
    movie_list: trakt-movies
    quality: 720p webdl
    content_size:
      min: 500
      max: 5000

  movies-noquality:
    metainfo_movie: yes
    trakt_lookup:
      account: "{? trakt.accout ?}"
      username: "{? trakt.user ?}"
    movie_list: trakt-movies
    content_size:
      min: 800
      max: 9000

##### Transmission config
#
  transmission-anchors:
    _transmission-settings: &transmission-settings
      host: "{? transmission.host ?}"
      port: 9091
      username: "{? transmission.user ?}"
      password: "{? transmission.pass ?}"

##### Common rejections
#
  reject:
    regexp:
      reject:
        - \b(s|d)ub(s|bed|lado|titulado)?\b
        - \bhc\b
        - \bdual\b
        - \b3d\b
        - \bfre(nch)?\b
        - \bita(lian)?\b
        - \bspa(nish)?\b
        - \bger(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

##### ADVANCED SETTINGS #####

##### Global config
#
  global:
    no_entries_ok: yes
    pathscrub: windows
    free_space:
      path: "/{? folder.root ?}"
      space: 5000
    # Requires log_filter plugin
#    log_filter:
#      task:
#        - marked seen
#        - because quality already downloaded
#        - because episode has already been downloaded
#        - Task does not have any
#      move:
#        - left because it exceeds safety value
#        - does not exists (anymore)
#      urlrewriter:
#        - URL rewritten to
#      enzyme.mkv:
#        - Reading
#        - Processing
#      enzyme.parsers.ebml.core:
#        - ignored
#        - Maximum level
#      subliminal.video:
#        - Scanning video
#      parser_internal:
#        - appears to be an episode pack
#      content_size:
#        - rejecting
#      search_rss:
#        - Error
#      assume_quality:
#        - ""
#      utils.requests:
#        - Waiting

##### Common torrents config
#
  torrents:
    torrent_alive:
      min_seeds: 3
      reject_for: 15 minutes
    magnets: no
    # Might need to disable if you are getting errors connecting to https sources
    # Can remove if you upgrade to python 2.7.9+ or install requests[security]
    #verify_ssl_certificates: no
    domain_delay:
#      thepiratebay.se: 10 seconds
      thepiratebay.org: 10 seconds
      limetorrents: 3 seconds

##### Transmission series config
#
  transmission-series:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      content_filename: "{{tvdb_series_name|default(series_name)|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %} - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      path: "/{? folder.root ?}{? folder.downseries ?}{{tvdb_series_name|default(series_name)|pathscrub}}/"

##### Transmission movies config
#
  transmission-movies:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
#      content_filename: "{{tmdb_name|default(movie_name)|pathscrub}}{% if movie_year|default(False) %}({tmdb_year|default(movie_year)}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
#      path: "/{? folder.root ?}{? folder.downmovies ?}{{movie_name|pathscrub}}"
      content_filename: "{{trakt_movie_name|default(movie_name)|pathscrub}}{% if movie_year|default(False) %}({trakt_movie_year|default(movie_year)}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      path: "/{? folder.root ?}{? folder.downmovies ?}{{movie_name|pathscrub}}"


##### Synology config
#
  synology:
    download:
      path: "{? folder.synology ?}"

##### Pushbullet config
#
  pushbullet:
    notify:
      entries:
        title: "[flexget] {{task}}"
#        message: "{{title}}"
        message: "{{filename}}"
        via:
          - pushbullet:
              api_key: "{? pushbullet.api ?}"

##### Disable builtins for some tasks
#
  disable-seen-retry:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

##### Series metainfo mainly for move and update tasks
#
  series-metainfo:
    metainfo_series: yes
    thetvdb_lookup: yes
#    tvmaze_lookup: yes

##### Guessit parsing for some series tasks, not applied to all tasks because it causes issues with "name (year)" based series, like scandal
#
  series-guessit:
    parsing:
      series: guessit

##### Movies metainfo mainly for move and update tasks
#
  movies-metainfo:
    metainfo_movie: yes
#    tmdb_lookup: yes
    trakt_lookup:
      account: "{? trakt.accout ?}"
      username: "{? trakt.user ?}"
    parsing:
      movie: guessit






tasks:

########## SERIES ##########

##### Populates the series database with the files on the library, to avoid duplicate downloads
#
  populate-series-db: # task
    priority: 10
    template:
      - series-metainfo
    seen: local
    filesystem:
      path: "/{? folder.root ?}{? folder.series ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4|m4v)$'
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: "/{? folder.root ?}{? folder.series ?}"
          retrieve: dirs
      settings:
        tracking: no
    exec:
      on_start:
        phase: echo "Started"

##### Fetch, format and output trakt series list to a custom entry list
#
  fill-series-list: # task
    priority: 20
    template:
      - disable-seen-retry
      - series-metainfo
    list_clear:
      what:
        - entry_list: trakt-series
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.series ?}"
      type: shows
    accept_all: yes
    set:
      title: "{{tvdb_series_name|default(series_name)}}"
    list_add:
      - entry_list: trakt-series


##### Download episodes from manually downloaded torrents
#
  download-series-manual: # task
    priority: 30
    template:
      - disable-seen-retry
      - series-metainfo
      - series-guessit
      - transmission-series
      - pushbullet
    filesystem:
      path: "/{? folder.watchseries ?}"
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"


##### Download episodes from RSS feeds
#
  download-series-rss: # task
    priority: 40
    template:
      - series
      - reject
      - torrents
      - transmission-series
#      - pushbullet
#      - synology
    trakt_lookup:
      account: "{? trakt.account ?}"
      username: "{? trakt.user ?}"
    if:
      - trakt_watched: reject
    inputs:
      - rss: https://torrentgalaxy.org/rss.php?cat=41


##### Discover and download older episodes and pilots from recently added series
#
  download-series-discover: # task
    priority: 50
    template:
      - series
      - reject
      - torrents
      - transmission-series
#      - pushbullet
    trakt_lookup:
      account: "{? trakt.account ?}"
      username: "{? trakt.user ?}"
    if:
      - trakt_watched: reject
    magnets: yes
    convert_magnet:
      timeout: 10 seconds
      force: yes
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - next_series_episodes:
            from_start: yes
            #backfill: yes
      from:
        - search_rss: https://torrentgalaxy.org/rss.php?cat=41


########## MOVIES ##########

##### Remove manually downloaded movies from the movie queue and trakt list
#
  clean-movies-queue: # task
    priority: 60
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.movies ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4|m4v)$'
    accept_all: yes
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


##### Fill the movie queue with movies from trakt list
#
  fill-movies-queue: # task
    priority: 70
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.movies ?}"
      type: movies
      strip_dates: yes
    accept_all: yes
    list_add:
      - movie_list: trakt-movies


##### Download movies manually downloaded torrents
#
  download-movies-manual: # task
    priority: 80
    template:
      - disable-seen-retry
      - movies-metainfo
      - transmission-movies
      - pushbullet
    filesystem:
      path: "/{? folder.watchmovies ?}"
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


##### Download movies from RSS feeds
#
  download-movies-rss: # task
    priority: 90
    template:
      - movies-noquality
      - reject
      - torrents
      - transmission-movies
    inputs:
      - rss: { url: 'https://thepiratebay.org/rss/top100/201', silent: yes }
      #- rss: { url: 'http://extratorrent.cc/rss.xml?cid=4', silent: yes }
      #- rss: { url: 'http://www.torlock.com/movies/rss.xml', silent: yes }

    seen: local

##### Discover and download 1080p movies
#
  download-movies-1080p-discover: # task
    priority: 100
    template:
      - movies-1080p
      - reject
      - torrents
      - transmission-movies
#      - synology
#      - pushbullet
    exists_movie:
      - "/{? folder.root ?}{? folder.downmovies ?}"
      - "/{? folder.root ?}{? folder.movies ?}"
    magnets: yes
    convert_magnet:
      timeout: 10 seconds
      force: yes
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - movie_list: trakt-movies
      from:
        - yts: yes
        - search_rss: https://torrentgalaxy.org/rss.php?cat=42
        - piratebay:
            category: movies
        - limetorrents:
            category: movies

    list_match:
      from:
        - movie_list: trakt-movies
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


##### Discover and download 720p movies, if the movie is not recent
#
  download-movies-720p-discover: # task
    priority: 110
    template:
      - movies-720p
      - reject
      - torrents
      - transmission-movies
#      - synology
#      - pushbullet

    exists_movie:
      - "/{? folder.root ?}{? folder.downmovies ?}"
      - "/{? folder.root ?}{? folder.movies ?}"
    magnets: yes
    convert_magnet:
      timeout: 10 seconds
      force: yes
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - movie_list: trakt-movies
      from:
        - yts: yes
#        - search_rss: https://torrentgalaxy.org/rss.php?cat=1


#    if:
#      - trakt_movie_year > now.year - 1: reject
    list_match:
      from:
        - movie_list: trakt-movies
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.movies ?}"
          type: movies


########## LIBRARY ##########

##### Move series from downloads folder to respective folders, along with existing subtitles and adding the files to the subtitle queue
#
  move-series: # task
    priority: 120
    template:
      - disable-seen-retry
      - series-metainfo
      - pushbullet
    filesystem:
      path:
        - "/{? folder.root ?}{? folder.downseries ?}"
        - "/{? folder.root ?}{? folder.downseriesmanual ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4|m4v)$'
    accept_all: yes
    move:
      to: "/{? folder.root ?}{? folder.series ?}{{tvdb_series_name|default(series_name)|pathscrub}}/S{{tvdb_season|pad(2)|default(series_season|pad(2))}}/"
      rename: "{{tvdb_series_name|default(series_name)|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %} - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"

      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 50
    regexp:
      reject:
        - .*(rarbg|RARBG).mp4
        - .*(rarbg|RARBG).(com|COM)
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 7 days
    kodi_library:
      action: scan
      category: video
      url: http://192.168.254.100
      port: 8080
      username: "{? kodi.user ?}"
      password: "{? kodi.password ?}"
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.downseries ?}"* -type d -empty -delete


##### Move movies from downloads folder to the movies folder, along with possible subtitles and adding the files to the subtitle queue
#
  move-movies: # task
    priority: 130
    template:
      - disable-seen-retry
      - movies-metainfo
      - pushbullet
    filesystem:
      path:
        - "/{? folder.root ?}{? folder.downmovies ?}"
        - "/{? folder.root ?}{? folder.downmoviesmanual ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4|m4v)$'
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
        - .*(rarbg|RARBG).mp4
        - .*(rarbg|RARBG).(com|COM)
    move:
#      to: "/{? folder.root ?}{? folder.movies ?}{{tmdb_name|default(movie_name)|pathscrub}} ({{tmdb_year|default(movie_year)}})"
#      rename: "{{tmdb_name|default(movie_name)|pathscrub}} ({{tmdb_year|default(movie_year)}}){% if quality|default(False) %} - [{{quality}}]{% endif %}"
      to: "/{? folder.root ?}{? folder.movies ?}{{trakt_movie_name|default(movie_name)|pathscrub}} ({{trakt_movie_year|default(movie_year)}})"
      rename: "{{trakt_movie_name|default(movie_name)|pathscrub}} ({{trakt_movie_year|default(movie_year)}}){% if quality|default(False) %} - [{{quality}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 100
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 7 days
    kodi_library:
      action: scan
      category: video
      url: http://192.168.254.100
      port: 8080
      username: "{? kodi.user ?}"
      password: "{? kodi.password ?}"
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.downmovies ?}"* -type d -empty -delete


##### Download subtitles for the previously queued files
#
  download-subtitles: # task
    priority: 140
    template:
      - disable-seen-retry
    subtitle_list:
      list: subtitles
    list_match:
      from:
        - subtitle_list:
            list: subtitles
    subliminal:
      exact_match: yes
      languages:
        - eng
      authentication:
        addic7ed:
          username: "{? addic7ed.user ?}"
          password: "{? addic7ed.password ?}"
        opensubtitles:
          username: "{? opensubtitles.user ?}"
          password: "{? opensubtitles.passsword ?}"


##### Clean finished torrents from transmission
#
  clean-transmission: # task
    priority: 150
    disable: details
    clean_transmission:
      <<: *transmission-settings
      finished_for: 1 day


########## UPDATES ##########

##### Update trakt series list from local series folders, excluding the ones that already ended
#
  update-series-list: # task
    priority: 160
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.series ?}"
      retrieve: dirs
    manipulate:
      - title:
          replace:
            regexp: '$'
            format: ' S01E01'
    accept_all: yes
    if:
      - tvdb_status == 'Ended': reject
    list_add:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series ?}"
          type: shows


##### Clean the series that already ended from trakt series list
#
  clean-series-list: # task
    priority: 170
    delay: 8 day
    template:
      - disable-seen-retry
      - series-metainfo
#      - pushbullet
    trakt_list:
      account: "{? trakt.account ?}"
      list: "{? trakt.series ?}"
      type: shows
    if:
      - tvdb_status == 'Ended': accept
    list_remove:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series ?}"
          type: shows



##### Sync the seen episodes in the db with trakt series list
  seed-series-db-once: # task
    priority: 180
    manual: yes
    disable: [seen]
    accept_all: yes
    next_trakt_episodes:
      account: '{? trakt.account ?}'
#      context: watched # set this to collected if you want to use that instead
      context: collected # set this to watched if you want to use that instead
      list: "{? trakt.series ?}"
      strip_dates: yes
    set_series_begin: yes


####################### MISC #########################
  letterboxd-to-trakt: # task
    priority: 190
    disable: seen

#    template:
#      - disable-seen-retry
    letterboxd:
      username: "{? letterboxd.user ?}"
      list: love-smile-cry
    sort_by: added
    #    max_results: 20  # <--- Set depending on how often you run the task; high enough that it will catch all new entries,
    accept_all: yes    #      but low enough so as not to parse (much) more of the list than is necessary.
    list_add:
      - trakt_list:
          account: "{? trakt.account ?}"
          username: "{? trakt.user ?}"
          list: love-smile-cry


  copy-log-files: # task
    priority: 200
    exec:
      on_exit:
        phase: /home/fmf/.flexget/copy-log.sh
